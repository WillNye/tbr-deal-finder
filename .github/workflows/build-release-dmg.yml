name: Build and Attach DMG to Release

on:
  release:
    types: [created, edited]

permissions:
  contents: write
  
jobs:
  build-dmg:
    runs-on: macos-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.13'
        
    - name: Install uv
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH
        
    - name: Install project dependencies
      run: |
        uv sync
        
    - name: Build DMG
      run: |
        make build-mac
        
    - name: Verify DMG was created
      run: |
        ls -la gui_dist/
        if [ ! -f "gui_dist/TBRDealFinder.dmg" ]; then
          echo "❌ DMG file not found!"
          exit 1
        fi
        echo "✅ DMG file created successfully"
        
    - name: Get DMG info
      id: dmg-info
      run: |
        DMG_SIZE=$(ls -lh gui_dist/TBRDealFinder.dmg | awk '{print $5}')
        echo "size=$DMG_SIZE" >> $GITHUB_OUTPUT
        echo "📦 DMG Size: $DMG_SIZE"
        
    - name: Upload DMG to Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ github.event.release.tag_name }} \
          gui_dist/TBRDealFinder.dmg \
          --clobber \
          --repo ${{ github.repository }}
        
    - name: Update Release Description
      uses: actions/github-script@v7
      with:
        script: |
          const { data: release } = await github.rest.repos.getRelease({
            owner: context.repo.owner,
            repo: context.repo.repo,
            release_id: context.payload.release.id
          });
          
          const dmgSize = "${{ steps.dmg-info.outputs.size }}";
          const downloadSection = `

